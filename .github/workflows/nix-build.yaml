---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build and diff Nix systems

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    paths:
      - "github/workflows/**"
      - "**.nix"
      - "!devenv.nix"
      - "flake.lock"

# Notice: nix-darwin needs sudo since 25.05
# current work around with:
# ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which nix) build ...
# ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which darwin-rebuild) build ...

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  nix-build:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' &&
       !(github.event.head_commit.committer.username == 'web-flow' &&
         github.event.head_commit.author.username == 'web-flow'))
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - system: soulwhisper-mba
            os: macos-latest
          - system: nix-dev
            os: ubuntu-latest
          - system: nix-infra
            os: ubuntu-latest
          - system: nix-ops
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Free Disk Space
        if: runner.os == 'Linux'
        uses: jlumbroso/free-disk-space@main
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v20
        with:
          extra-args: --prefer-upstream-nix
      - name: Set up Cachix
        uses: cachix/cachix-action@v16
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          name: soulwhisper
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Garbage collect build dependencies
        run: nix-collect-garbage

      - name: Build previous ${{ matrix.system }} system
        run: |
          ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which nix) build \
            "github:soulwhisper/nix-config#ciSystems.${{ matrix.system }}" \
            --profile ./profile \
            --no-write-lock-file \
            -v --show-trace --print-build-logs \
            --log-format raw \
             > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Build new ${{ matrix.system }} system
        run: |
          set -o pipefail
          ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which nix) build \
            ".#ciSystems.${{ matrix.system }}" \
            --profile ./profile \
            --no-write-lock-file \
            --fallback \
            -v --show-trace --print-build-logs \
            --log-format raw \
             > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2) | cachix push soulwhisper

      - name: Show drv failure details
        if: failure()
        run: |
          failed_drv_t1=$(grep "For full logs" /tmp/nix-build-err.log | grep -oE '/nix/store/[a-z0-9]{32}-[^ ]+\.drv' | head -n1)
          failed_drv_t2=$(grep "failed to build" /tmp/nix-build-err.log | grep -oE '/nix/store/[a-z0-9]{32}-[^ ]+\.drv' | head -n1)
          echo "Last 100 lines of error log:"
          tail -n 100 /tmp/nix-build-err.log
          if [ -n "$failed_drv_t1" ]; then
            echo "Showing logs for $failed_drv_t1"
            ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which nix) log "$failed_drv_t1"
          elif [ -n "$failed_drv_t2" ]; then
            echo "Showing logs for $failed_drv_t2"
            ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which nix) log "$failed_drv_t2"
          else
            echo "No derivation files found in error log."
          fi
          exit 1

      - name: Diff profile
        id: diff
        run: |
          ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which nix) profile diff-closures --profile ./profile
          delimiter="$(openssl rand -hex 16)"
          echo "diff<<${delimiter}" >> "${GITHUB_OUTPUT}"
          ${{ runner.os == 'macOS' && 'sudo ' || '' }}$(which nix) profile diff-closures --profile ./profile | perl -pe 's/\e\[[0-9;]*m(?:\e\[K)?//g' >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Generate Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.PRIVATE_APP_ID }}
          private-key: ${{ secrets.PRIVATE_APP_KEY }}

      - name: Comment report in pr
        uses: marocchino/sticky-pull-request-comment@v2
        continue-on-error: true
        with:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"
          header: ".#ciSystems.${{ matrix.system }}"
          message: |
            ### Report for `${{ matrix.system }}`

            <summary> Version changes </summary> <br>
            <pre> ${{ steps.diff.outputs.diff }} </pre>

  matrix-status:
    if: ${{ !cancelled() }}
    needs:
      - nix-build
    runs-on: ubuntu-latest
    steps:
      - name: Check build matrix status
        if: ${{ needs.nix-build.result != 'success' }}
        run: exit 1
